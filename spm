#!/bin/bash

# Copyright © 2024 slashOS Team and Contributors

### ΤΟ DO ###
# - Removing packages
# - Manage flatpak
# - Updating/Downgrading specific packages
# - Searching
# - Integration with GNOME Software or creation of a completely new graphical frontend.
# - Fix bugs (OMG NO WAY!!!1111)

help(){
  echo "Welcome to the Slash Package Manager!"
  echo ""
  echo "Syntax: spm [action] ([arguements] [package])"
  echo ""
  echo "Main Actions:"
  echo "        help        | shows this"
  echo "        remove      | removes a package (any format)"
  echo "        install     | installs the specified package using pacman" 
  echo "                    | (use the -a arguement to install from the AUR instead)"
  echo "        update      | updates all packages"
  echo ""
  exit 0
}

remove() {
    # time to implement proper removing system  
}

install() {
    sudo pacman -Sy $1
    exit 0
}

aurinstall() {
    echo "Preparing to install $1"
    cd /home/$USER
    mkdir aurinstallTEMP
    cd aurinstallTEMP
    curl https://aur.archlinux.org/cgit/aur.git/snapshot/$1.tar.gz --output $1.tar.gz
    tar -xvzf $1.tar.gz
    cd $1
    makepkg --install --syncdeps --clean --noconfirm
    if [ $? -eq 0 ]; 
    then
      echo "$1 was installed successfully."
      echo "Adding $1 to spm AUR package history..."
      sudo echo "$1" >> /etc/spmaurhistory
    else
      echo "(spm) Error: Installing $1 from the AUR failed."
      exit 1
    fi
    echo "Removing left over junk files."
    cd /home/$USER
    sudo rm -rf aurinstallTEMP
}

pipinstall() {
    echo "Installing $1 using pip"
    pip install $1 --break-system-packages
    if [ $? -eq 0 ]; 
    then
      echo "$1 was installed successfully."
      echo "Adding $1 to spm pip package history..."
      sudo echo "$1" >> /etc/spmpiphistory
    else
      echo "(spm) Error: Installing $1 using pip failed."
      exit 1
    fi
    exit 0
}

update() { 
   echo "Updating pacman packages..." 
   sudo pacman -Syu
   echo "Updating AUR packages..." 
   while read -r apkg; do
     aurinstall "$apkg"
   done < "/etc/spmaurhistory"
   echo "Updating pip packages"
   while read -r ppkg; do
     aurinstall "$ppkg"
   done < "/etc/spmpiphistory"
   exit 0
}

if [ "$1" == "help" ] && [ "$#" -eq  1 ]
then
  help
elif [ "$1" == "install" ] && [ "$#" -eq  2 ]
then
  install "$2"
elif [ "$1" == "install" ] && [ "$2" == "-p" ] && [ "$#" -eq  3 ]
then
  pipinstall "$3"
elif [ "$1" == "install" ] && [ "$2" == "-a" ] && [ "$#" -eq  3 ]
then
  aurinstall "$3"
elif [ "$1" == "remove" ] && [ "$#" -eq  2 ]
then
  remove "$2"
elif [ "$1" == "update" ] && [ "$#" -eq  1 ]
then
  update
else
  echo "(spm) Error: Invalid Syntax"
  exit 1 
fi
